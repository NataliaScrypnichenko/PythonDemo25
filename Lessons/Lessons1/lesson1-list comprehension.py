#—Ö–æ—á—É –º–∞—Å–∏–≤ –≤—ñ–¥ 0 –¥–æ 100
l=[i for i in range(100)]
print(l)
#  –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–æ–∂–Ω–∞ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –º–∞–ø—ñ–≤
d=[4,2,7,2,4,1]
#–∑–∞–ø–∏—Å–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–∞—Ä–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
res=[i for i in d  if i%2==0]
print(res)
# –∫–æ–∂–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ö–æ—á—É –ø–µ—Ä–µ–º–Ω–æ–∂–∏—Ç–∏ –Ω–∞ 2
res=[i*2 for i in d]
print(res)
# –º–æ–∂–Ω–∞ –ø–æ—î–¥–Ω–∞—Ç–∏
res=[i*2 for i in d if i%2==0]
print(res)
# –ø–µ—Ä–µ–º–Ω–æ–∂–∏—Ç–∏ –≤—Å—ñ –ø–∞—Ä–Ω—ñ —ñ –∑–∞–ª–∏—à–∏—Ç–∏ –≤—Å—ñ —ñ–Ω—à—ñ(—è–∫—â–æ if  —ñ–Ω–∞–∫—à–µ else –æ—Ç–∂–µ for )
res=[i*2 if i%2==0 else i  for i in  d]
print(res)

l2d=[
    [1,2,3,4,5],
    [6,7,8,9,10]
]
# —Ö–æ—á—É –≤–∏—Ä—ñ–≤–Ω—è—Ç–∏ –≤ –æ–¥–∏–Ω –º–∞—Å–∏–≤
l2=[i for j in l2d for i in j]
print(l2)
# –∑–≤–∏—á–∞–π–Ω–∏–π —Ü–∏–∫–ª
l=[]
for j in l2d:
    for i in j:
        l.append(i)
print(l)

### üîπ **List Comprehension —É Python**
# üìå **List comprehension** ‚Äì —Ü–µ **—Å–∫–æ—Ä–æ—á–µ–Ω–∏–π —Å–ø–æ—Å—ñ–±** —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ —É Python.
# –í—ñ–Ω –¥–æ–∑–≤–æ–ª—è—î **–∑–∞–ø–æ–≤–Ω—é–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫** —É **–æ–¥–Ω–æ–º—É —Ä—è–¥–∫—É –∫–æ–¥—É**, —Ä–æ–±–ª—è—á–∏ –π–æ–≥–æ –±—ñ–ª—å—à **–∑—Ä–æ–∑—É–º—ñ–ª–∏–º —Ç–∞ –∫–æ–º–ø–∞–∫—Ç–Ω–∏–º**.
### ‚úÖ **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**
# [–≤–∏—Ä–∞–∑ for –µ–ª–µ–º–µ–Ω—Ç in —ñ—Ç–µ—Ä–∞–±–µ–ª—å–Ω–∏–π_–æ–±'—î–∫—Ç if —É–º–æ–≤–∞]
# üìå `–≤–∏—Ä–∞–∑` ‚Äì —Ü–µ –¥—ñ—è, —è–∫–∞ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –Ω–∞–¥ –∫–æ–∂–Ω–∏–º `–µ–ª–µ–º–µ–Ω—Ç–æ–º`.
# üìå `—ñ—Ç–µ—Ä–∞–±–µ–ª—å–Ω–∏–π_–æ–±'—î–∫—Ç` ‚Äì —Å–ø–∏—Å–æ–∫, range, —Ä—è–¥–æ–∫ —Ç–æ—â–æ.
# üìå `if —É–º–æ–≤–∞` ‚Äì (–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ) —Ñ—ñ–ª—å—Ç—Ä—É—î –µ–ª–µ–º–µ–Ω—Ç–∏.

## üîπ **–ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è**
### ‚úÖ **1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —á–∏—Å–µ–ª**
—á–∏—Å–ª–∞ = [x for x in range(5)]
print(—á–∏—Å–ª–∞)  # [0, 1, 2, 3, 4]

### ‚úÖ **2. –ü—ñ–¥–Ω–µ—Å–µ–Ω–Ω—è –¥–æ –∫–≤–∞–¥—Ä–∞—Ç—É**
–∫–≤–∞–¥—Ä–∞—Ç–∏ = [x**2 for x in range(1, 6)]
print(–∫–≤–∞–¥—Ä–∞—Ç–∏)  # [1, 4, 9, 16, 25]

### ‚úÖ **3. –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è (–∑ `if`)**
–ø–∞—Ä–Ω—ñ = [x for x in range(10) if x % 2 == 0]
print(–ø–∞—Ä–Ω—ñ)  # [0, 2, 4, 6, 8]

### ‚úÖ **4. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è `if-else`**
–ø–∞—Ä–Ω—ñ_–Ω–µ–ø–∞—Ä–Ω—ñ = ["–ø–∞—Ä–Ω–µ" if x % 2 == 0 else "–Ω–µ–ø–∞—Ä–Ω–µ" for x in range(5)]
print(–ø–∞—Ä–Ω—ñ_–Ω–µ–ø–∞—Ä–Ω—ñ)  # ['–ø–∞—Ä–Ω–µ', '–Ω–µ–ø–∞—Ä–Ω–µ', '–ø–∞—Ä–Ω–µ', '–Ω–µ–ø–∞—Ä–Ω–µ', '–ø–∞—Ä–Ω–µ']

### ‚úÖ **5. –†–æ–±–æ—Ç–∞ –∑ —Ä—è–¥–∫–∞–º–∏**
—Å–ª–æ–≤–∞ = ["—è–±–ª—É–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"]
–¥–æ–≤–∂–∏–Ω–∏ = [len(—Å–ª–æ–≤–æ) for —Å–ª–æ–≤–æ in —Å–ª–æ–≤–∞]
print(–¥–æ–≤–∂–∏–Ω–∏)  # [6, 5, 8]

### ‚úÖ **6. List comprehension —ñ–∑ –≤–∫–ª–∞–¥–µ–Ω–∏–º–∏ —Ü–∏–∫–ª–∞–º–∏**

–º–∞—Ç—Ä–∏—Ü—è = [[x * y for x in range(1, 4)] for y in range(1, 4)]
print(–º–∞—Ç—Ä–∏—Ü—è)  # [[1, 2, 3], [2, 4, 6], [3, 6, 9]]

## üîπ **–í–∏—Å–Ω–æ–≤–æ–∫**
# ‚úÖ **List comprehension** ‚Äì —Ü–µ **—à–≤–∏–¥–∫–∏–π —Ç–∞ –µ–ª–µ–≥–∞–Ω—Ç–Ω–∏–π —Å–ø–æ—Å—ñ–±** —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤.
# ‚úÖ –î–æ–∑–≤–æ–ª—è—î **—Å–∫–æ—Ä–æ—á—É–≤–∞—Ç–∏ –∫–æ–¥** —Ç–∞ —Ä–æ–±–∏—Ç—å –π–æ–≥–æ **—á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—à–∏–º**.
# ‚úÖ –ú–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ **`if` —Ç–∞ `if-else` –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö**. üöÄ