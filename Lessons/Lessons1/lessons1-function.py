def fun(name, age=4,*args, **kwargs):
    print('Hello', name,age)
    print(args)
    print(kwargs)
fun('Michael', 55, 'KARINA',True,100, name_='Oleg', house=55)

def fun(a,b,c):
    print( a,b,c)
l=[1,6,3]
fun(*l)


#*args =–º–æ–∂–Ω–∞ –¥–æ–¥–∞–≤–∞—Ç–∏ –±—É–¥—å —â–æ
# **kwargs=—ñ–º–µ–Ω–Ω–æ–≤–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏,—ñ –±—É–¥—É—Ç—å —Å–ª–æ–≤–Ω–∏–∫–∞–º–∏

# 1Ô∏è‚É£ –ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–æ—Å—Ç–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
def fun():
    print("Hello, world!")
fun()  # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é #Hello, world!
# ‚úÖ –©–æ —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?
# def fun(): ‚Äî —Å—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é fun, —è–∫–∞ –¥—Ä—É–∫—É—î "Hello, world!".
# fun() ‚Äî –≤–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é.
# 2Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏-‚úÖ –¢—É—Ç —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä name, —ñ –º–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ —Ä—ñ–∑–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è.
def fun(name):
    print(f"Hello, {name}!")
fun("Alice")  # Hello, Alice!
fun("Bob")    # Hello, Bob!
# 3Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è (return) ‚úÖ return –¥–æ–∑–≤–æ–ª—è—î –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó.
def fun(a, b):
    return a + b
result = fun(5, 3)
print(result)  # 8
# 4Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º‚úÖ –Ø–∫—â–æ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è "Guest".
def fun(name="Guest"):
    print(f"Hello, {name}!")

fun()         # Hello, Guest!
fun("John")   # Hello, John!
# 5Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ –¥–æ–≤—ñ–ª—å–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ (*args)‚úÖ *args –∑–±–∏—Ä–∞—î –ø–æ–∑–∏—Ü—ñ–π–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —É –∫–æ—Ä—Ç–µ–∂.
def fun(*args):
    print(args)
fun(1, 2, 3, "Hello")  # (1, 2, 3, 'Hello')
# 6Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ —ñ–º–µ–Ω–æ–≤–∞–Ω–∏–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ (**kwargs) ‚úÖ **kwargs –∑–±–∏—Ä–∞—î —ñ–º–µ–Ω–æ–≤–∞–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —É —Å–ª–æ–≤–Ω–∏–∫.
def fun(**kwargs):
    print(kwargs)
fun(name="Alice", age=25)  # {'name': 'Alice', 'age': 25}
# üî• –í–∏—Å–Ω–æ–≤–æ–∫
# –§—É–Ω–∫—Ü—ñ—è	    –û–ø–∏—Å
# def fun():	   –û–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
# fun()	            –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó
# def fun(a, b):	–§—É–Ω–∫—Ü—ñ—è –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
# return	        –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è
# *args          	–î–æ–≤—ñ–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∑–∏—Ü—ñ–π–Ω–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
# **kwargs	        –î–æ–≤—ñ–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω–æ–≤–∞–Ω–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ

# üîπ –§—É–Ω–∫—Ü—ñ—ó –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –æ–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –∫–æ–¥ —Ç–∞ —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω—å!

# 1Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ –∫—ñ–ª—å–∫–æ–º–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ ‚úÖ –§—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î —Ç—Ä–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—é —Å—É–º—É.
def add(a, b, c):
    return a + b + c
result = add(2, 5, 8)
# print(result)  # 1
# 2Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ –¥–µ–∫—ñ–ª—å–∫–æ–º–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º–∏ ‚úÖ return –º–æ–∂–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∫—ñ–ª—å–∫–∞ –∑–Ω–∞—á–µ–Ω—å —É –≤–∏–≥–ª—è–¥—ñ –∫–æ—Ä—Ç–µ–∂—É.
def get_values():
    return 10, 20, 30  # –ø–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä—Ç–µ–∂

x, y, z = get_values()
print(x, y, z)  # 10 20 30
# 3Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ *args (–Ω–µ–æ–±–º–µ–∂–µ–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤)‚úÖ *args –¥–æ–∑–≤–æ–ª—è—î –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –±—É–¥—å-—è–∫—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —á–∏—Å–µ–ª —É —Ñ—É–Ω–∫—Ü—ñ—é.
def multiply(*args):
    result = 1
    for num in args:
        result *= num
    return result
print(multiply(2, 3, 4))  # 24
print(multiply(5, 6))     # 30
# 4Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ **kwargs (—ñ–º–µ–Ω–æ–≤–∞–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏) ‚úÖ **kwargs –∑–±–∏—Ä–∞—î –≤—Å—ñ —ñ–º–µ–Ω–æ–≤–∞–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —É —Å–ª–æ–≤–Ω–∏–∫
def person_info(**kwargs):
    for key, value in kwargs.items():
        print(f"{key}: {value}")

person_info(name="Alice", age=30, city="Kyiv")
# name: Alice
# age: 30
# city: Kyiv

# 5Ô∏è‚É£ –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è (—Ñ–∞–∫—Ç–æ—Ä—ñ–∞–ª —á–∏—Å–ª–∞) ‚úÖ –†–µ–∫—É—Ä—Å—ñ—è ‚Äì —Ü–µ –∫–æ–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î —Å–∞–º–∞ —Å–µ–±–µ.
def factorial(n):
    if n == 1:
        return 1
    return n * factorial(n - 1)
print(factorial(5))  # 120
# 6Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç —ñ–Ω—à–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó # ‚úÖ –¢—É—Ç –º–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.
def square(x):
    return x * x
def apply_function(func, value):
    return func(value)
print(apply_function(square, 5))  # 25

#
# 7Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ lambda # ‚úÖ lambda ‚Äì —Ü–µ –∞–Ω–æ–Ω—ñ–º–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è (–∫–æ—Ä–æ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—è –±–µ–∑ def).
add = lambda x, y: x + y
print(add(3, 4))  # 7
# 8Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ map() # ‚úÖ map() –∑–∞—Å—Ç–æ—Å–æ–≤—É—î —Ñ—É–Ω–∫—Ü—ñ—é –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫—É.
numbers = [1, 2, 3, 4]
squared = list(map(lambda x: x ** 2, numbers))

print(squared)  # [1, 4, 9, 16]
# 9Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è –∑ filter() # ‚úÖ filter() –∑–∞–ª–∏—à–∞—î —Ç—ñ–ª—å–∫–∏ —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —É–º–æ–≤—ñ.
numbers = [10, 25, 3, 45, 6]
filtered = list(filter(lambda x: x > 10, numbers))

print(filtered)  # [25, 45]

# üîü –í–∫–ª–∞–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è # ‚úÖ –§—É–Ω–∫—Ü—ñ—è –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ —ñ–Ω—à—É —Ñ—É–Ω–∫—Ü—ñ—é –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ.
def outer_function():
    def inner_function():
        return "Hello from inner!"
    return inner_function()

print(outer_function())  # Hello from inner!
# üî• –í–∏—Å–Ω–æ–≤–æ–∫
# –ö–æ–Ω—Ü–µ–ø—Ü—ñ—è	–û–ø–∏—Å
# *args	–ü–µ—Ä–µ–¥–∞—á–∞ –Ω–µ–æ–±–º–µ–∂–µ–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
# **kwargs	–ü–µ—Ä–µ–¥–∞—á–∞ —ñ–º–µ–Ω–æ–≤–∞–Ω–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
# return	–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å
# lambda	–ê–Ω–æ–Ω—ñ–º–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
# map()	–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É
# filter()	–§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Å–ø–∏—Å–∫—É
# –†–µ–∫—É—Ä—Å—ñ—è	–§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î —Å–∞–º–∞ —Å–µ–±–µ



# —Ä–æ–∑—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–Ω—è


