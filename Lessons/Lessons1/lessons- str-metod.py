#–û—Å—å –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ä—è–¥–∫–∞–º–∏ (str) —É Python —ñ–∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º–∏:
# –ú–ï–¢–û–î–ò
str.lower()# –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –≤—Å—ñ –ª—ñ—Ç–µ—Ä–∏ —Ä—è–¥–∫–∞ –≤ –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä.
# text = "Hello World"
# print(text.lower())  # "hello world"

str.upper()#–ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –≤—Å—ñ –ª—ñ—Ç–µ—Ä–∏ –≤ –≤–µ—Ä—Ö–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä.
# print(text.upper())  # "HELLO WORLD"

str.capitalize()#–†–æ–±–∏—Ç—å –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É –≤–µ–ª–∏–∫–æ—é, –∞ —Ä–µ—à—Ç—É ‚Äì –º–∞–ª–∏–º–∏.
# "text = "hello world"
# print(text.capitalize())  # "Hello world

str.title() # –†–æ–±–∏—Ç—å –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É –∫–æ–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –≤–µ–ª–∏–∫–æ—é.
# print("hello world".title())  # "Hello World"

str.strip() # –í–∏–¥–∞–ª—è—î –ø—Ä–æ–±—ñ–ª–∏ (—Ç–∞ —ñ–Ω—à—ñ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω—ñ —Å–∏–º–≤–æ–ª–∏) –∑ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∫—ñ–Ω—Ü—è —Ä—è–¥–∫–∞.
# text = "   hello world   "
# print(text.strip())  # "hello world"

str.lstrip() #‚Äì –ø—Ä–∏–±–∏—Ä–∞—î –ø—Ä–æ–±—ñ–ª–∏ –∑–ª—ñ–≤–∞.
str.rstrip() #‚Äì –ø—Ä–∏–±–∏—Ä–∞—î –ø—Ä–æ–±—ñ–ª–∏ —Å–ø—Ä–∞–≤–∞
# print(text.lstrip())  # "hello world   "
# print(text.rstrip())  # "   hello world"

str.replace() # str.replace(old, new)-–ó–∞–º—ñ–Ω—é—î –≤—Å—ñ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è –ø—ñ–¥—Ä—è–¥–∫–∞ old –Ω–∞ new.
# print("hello world".replace("world", "Python"))  # "hello Python"

str.find() #str.find(sub)-–ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ö–æ–¥–∂–µ–Ω—å –ø—ñ–¥—Ä—è–¥–∫–∞ sub.
# print("hello hello world".count("hello"))  # 2

str.startswith(), str.endswith() #str.startswith(prefix), str.endswith(suffix)-–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è (startswith)
# –∞–±–æ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è (endswith) —Ä—è–¥–æ–∫ –∑–∞–¥–∞–Ω–∏–º –ø—ñ–¥—Ä—è–¥–∫–æ–º.
# print("hello world".startswith("hello"))  # True
# print("hello world".endswith("world"))  # True

str.split() # str.split(sep) –†–æ–∑–±–∏–≤–∞—î —Ä—è–¥–æ–∫ –Ω–∞ —Å–ø–∏—Å–æ–∫ —á–∞—Å—Ç–∏–Ω –∑–∞ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–æ–º sep (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º ‚Äì –ø—Ä–æ–±—ñ–ª).
# print("hello world".split())  # ['hello', 'world']
# print("apple,banana,grape".split(","))  # ['apple', 'banana', 'grape']

str.join() #str.join(iterable)-–û–±'—î–¥–Ω—É—î –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–ø–∏—Å–∫—É (iterable) —É —Ä—è–¥–æ–∫, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –¥–∞–Ω–∏–π —Ä—è–¥–æ–∫ —è–∫ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫.
# words = ["hello", "world"]
# print(" ".join(words))  # "hello world"
# print(",".join(["apple", "banana", "grape"]))  # "apple,banana,grape"

str.isalnum() # —á–∏ –º—ñ—Å—Ç–∏—Ç—å —Ç—ñ–ª—å–∫–∏ –±—É–∫–≤–∏ —Ç–∞/–∞–±–æ —Ü–∏—Ñ—Ä–∏.
# print("hello123".isalnum())  # True
# print("hello 123".isalnum())  # False (–±–æ —î –ø—Ä–æ–±—ñ–ª)

str.zfill() #str.zfill(width)-–î–æ–ø–æ–≤–Ω—é—î —Ä—è–¥–æ–∫ –Ω—É–ª—è–º–∏ –∑–ª—ñ–≤–∞ –¥–æ –∑–∞–¥–∞–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ width.
# print("42".zfill(5))  # "00042"

str.center() #str.center(width, fillchar)-–í–∏—Ä—ñ–≤–Ω—é—î —Ä—è–¥–æ–∫ –ø–æ —Ü–µ–Ω—Ç—Ä—É, –∑–∞–ø–æ–≤–Ω—é—é—á–∏ –ø—Ä–æ–±—ñ–ª–∞–º–∏ –∞–±–æ —Å–∏–º–≤–æ–ª–æ–º fillchar.
# print("hello".center(10, "-"))  # "--hello---"

str.isspace() #–ú–µ—Ç–æ–¥ str.isspace() –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º—ñ—Å—Ç–∏—Ç—å —Ä—è–¥–æ–∫ —Ç—ñ–ª—å–∫–∏ –ø—Ä–æ–±—ñ–ª–∏, —Ç–∞–±—É–ª—è—Ü—ñ—ó (\t),
# –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è —Ä—è–¥–∫–∞ (\n) –∞–±–æ —ñ–Ω—à—ñ –ø—Ä–æ–±—ñ–ª—å–Ω—ñ —Å–∏–º–≤–æ–ª–∏.–ú–µ—Ç–æ–¥ –∫–æ—Ä–∏—Å–Ω–∏–π, –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ä—è–¥–æ–∫ –ª–∏—à–µ –∑ –ø—Ä–æ–±—ñ–ª—å–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤,
# –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–µ—Ä–µ–¥ –æ–±—Ä–æ–±–∫–æ—é –≤–≤–µ–¥–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –¥–∞–Ω–∏—Ö.
# –Ø–∫—â–æ —Ç–∞–∫ ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î True, —ñ–Ω–∞–∫—à–µ False.
# print("   ".isspace())   # True (—Ç—ñ–ª—å–∫–∏ –ø—Ä–æ–±—ñ–ª–∏)
# print("\t\n".isspace())  # True (—Ç–∞–±—É–ª—è—Ü—ñ—è + –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫)
# print("hello".isspace()) # False (—î —Å–∏–º–≤–æ–ª–∏)
# print(" hello ".isspace()) # False (—î –ø—Ä–æ–±—ñ–ª–∏, –∞–ª–µ —Ç–∞–∫–æ–∂ —î –±—É–∫–≤–∏)
# print("".isspace())  # False (–ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫)

str.isdecimal() #–ú–µ—Ç–æ–¥ str.isdecimal() –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ä—è–¥–æ–∫ —Ç—ñ–ª—å–∫–∏ –∑ –¥–µ—Å—è—Ç–∫–æ–≤–∏—Ö —Ü–∏—Ñ—Ä (0-9).
# –Ø–∫—â–æ —Ç–∞–∫ ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î True, —ñ–Ω–∞–∫—à–µ False.
#–ü—Ä–∏–∫–ª–∞–¥–∏:
# print("123".isdecimal())   # True (—Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏ 0-9)
# print("Ÿ£Ÿ§Ÿ•".isdecimal())   # True (–∞—Ä–∞–±—Å—å–∫—ñ —Ü–∏—Ñ—Ä–∏)
# print("12.3".isdecimal())  # False (–º—ñ—Å—Ç–∏—Ç—å –∫—Ä–∞–ø–∫—É)
# print("‚Öï".isdecimal())     # False (–¥—Ä–æ–±–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏)
# print("¬≤".isdecimal())     # False (—Å—Ç–µ–ø—ñ–Ω—å, –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Ü–∏—Ñ—Ä–∞)
# print("123abc".isdecimal()) # False (–º—ñ—Å—Ç–∏—Ç—å –ª—ñ—Ç–µ—Ä–∏)
# print("".isdecimal())      # False (–ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫)
# üîπ –í–∞–∂–ª–∏–≤–æ:
# isdecimal() –ø–µ—Ä–µ–≤—ñ—Ä—è—î —Ç—ñ–ª—å–∫–∏ –¥–µ—Å—è—Ç–∫–æ–≤—ñ —Ü–∏—Ñ—Ä–∏.
# –í—ñ–Ω –Ω–µ –ø—Ä–∞—Ü—é—î –∑ –¥—Ä–æ–±–æ–≤–∏–º–∏ –∞–±–æ –Ω–∞–¥—Ä—è–¥–∫–æ–≤–∏–º–∏ —á–∏—Å–ª–∞–º–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, ¬≤ –∞–±–æ ‚Öï).
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤—Å—ñ –≤–∏–¥–∏ —á–∏—Å–µ–ª, –∫—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ .isdigit(), —è–∫–µ –ø—Ä–∏–π–º–∞—î –±—ñ–ª—å—à–µ —á–∏—Å–ª–æ–≤–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤.
# üîç –†—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ .isdecimal(), .isdigit() —ñ .isnumeric():
# –ú–µ—Ç–æ–¥	–î–µ—Å—è—Ç–∫–æ–≤—ñ —Ü–∏—Ñ—Ä–∏ (0-9)	–ù–∞–¥—Ä—è–¥–∫–æ–≤—ñ (¬≤, ¬≥)	–î—Ä–æ–±–∏ (‚Öï, ¬Ω)	–ê—Ä–∞–±—Å—å–∫—ñ —Ü–∏—Ñ—Ä–∏ (Ÿ£Ÿ§Ÿ•)
# isdecimal()	‚úÖ –¢–∞–∫	‚ùå –ù—ñ	‚ùå –ù—ñ	‚úÖ –¢–∞–∫
# isdigit()	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫	‚ùå –ù—ñ	‚úÖ –¢–∞–∫
# isnumeric()	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ª–∏—à–µ –∑–≤–∏—á–∞–π–Ω—ñ —Ü–∏—Ñ—Ä–∏ (0-9) ‚Äì –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ isdecimal().
# –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—Ç–µ–ø–µ–Ω—ñ —Ç–∞ —ñ–Ω—à—ñ —Ü–∏—Ñ—Ä–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏ ‚Äì –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ isdigit().
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±—É–¥—å-—è–∫—ñ —á–∏—Å–ª–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏ (–Ω–∞–≤—ñ—Ç—å –¥—Ä–æ–±–∏) ‚Äì –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ isnumeric().

str.isdigit() #–ú–µ—Ç–æ–¥ str.isdigit() –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ä—è–¥–æ–∫ —Ç—ñ–ª—å–∫–∏ –∑ —Ü–∏—Ñ—Ä–æ–≤–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤.
# –Ø–∫—â–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ ‚Äì —Ü–∏—Ñ—Ä–∏, –º–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î True, —ñ–Ω–∞–∫—à–µ False.
# üìå –ü—Ä–∏–∫–ª–∞–¥–∏:
# print("123".isdigit())   # True (–∑–≤–∏—á–∞–π–Ω—ñ —Ü–∏—Ñ—Ä–∏ 0-9)
# print("Ÿ£Ÿ§Ÿ•".isdigit())   # True (–∞—Ä–∞–±—Å—å–∫—ñ —Ü–∏—Ñ—Ä–∏)
# print("¬≤¬≥".isdigit())    # True (—Å—Ç–µ–ø–µ–Ω—ñ ¬≤, ¬≥ –≤–≤–∞–∂–∞—é—Ç—å—Å—è —Ü–∏—Ñ—Ä–∞–º–∏)
# print("12.3".isdigit())  # False (—î –∫—Ä–∞–ø–∫–∞)
# print("‚Öï".isdigit())     # False (–¥—Ä–æ–±–æ–≤–∏–π —Å–∏–º–≤–æ–ª)
# print("123abc".isdigit()) # False (–ª—ñ—Ç–µ—Ä–∏)
# print("".isdigit())      # False (–ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫)
# üîπ –í–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ:
# isdigit() –ø–æ–≤–µ—Ä—Ç–∞—î True –¥–ª—è:
# –ó–≤–∏—á–∞–π–Ω–∏—Ö –¥–µ—Å—è—Ç–∫–æ–≤–∏—Ö —Ü–∏—Ñ—Ä (0-9).
# –ê—Ä–∞–±—Å—å–∫–∏—Ö —Ü–∏—Ñ—Ä (Ÿ†Ÿ°Ÿ¢Ÿ£Ÿ§Ÿ•Ÿ¶ŸßŸ®Ÿ©).
# –°—Ç–µ–ø–µ–Ω–µ–≤–∏—Ö —á–∏—Å–µ–ª (¬≤, ¬≥).
# –ù–µ –ø—Ä–∞—Ü—é—î –¥–ª—è –¥—Ä–æ–±—ñ–≤ (‚Öï, ¬Ω) –∞–±–æ —á–∏—Å–µ–ª –∑ –∫—Ä–∞–ø–∫–æ—é (12.3).
# üîç –†—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ .isdigit(), .isdecimal() —ñ .isnumeric():
# –ú–µ—Ç–æ–¥	–î–µ—Å—è—Ç–∫–æ–≤—ñ —Ü–∏—Ñ—Ä–∏ (0-9)	–°—Ç–µ–ø–µ–Ω—ñ (¬≤, ¬≥)	–î—Ä–æ–±–∏ (‚Öï, ¬Ω)	–ê—Ä–∞–±—Å—å–∫—ñ —Ü–∏—Ñ—Ä–∏ (Ÿ£Ÿ§Ÿ•)
# isdecimal()	‚úÖ –¢–∞–∫	‚ùå –ù—ñ	‚ùå –ù—ñ	‚úÖ –¢–∞–∫
# isdigit()	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫	‚ùå –ù—ñ	‚úÖ –¢–∞–∫
# isnumeric()	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫	‚úÖ –¢–∞–∫
# isdecimal() ‚Äì —Ç—ñ–ª—å–∫–∏ –∑–≤–∏—á–∞–π–Ω—ñ —Ü–∏—Ñ—Ä–∏ (0-9).
# isdigit() ‚Äì –ø—ñ–¥—Ç—Ä–∏–º—É—î –¥–µ—Å—è—Ç–∫–æ–≤—ñ —Ü–∏—Ñ—Ä–∏ + —Å—Ç–µ–ø–µ–Ω—ñ.
# isnumeric() ‚Äì –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—Å—ñ —á–∏—Å–ª–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏, –≤–∫–ª—é—á–∞—é—á–∏ –¥—Ä–æ–±–∏.
# ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–≤–∏—á–∞–π–Ω—ñ —á–∏—Å–ª–∞ ‚Üí isdecimal().
# –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ —Å—Ç–µ–ø–µ–Ω—ñ ‚Üí isdigit().
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ –¥—Ä–æ–±–∏ —Ç–∞ —ñ–Ω—à—ñ —á–∏—Å–ª–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏ ‚Üí isnumeric().

str.isalpha() #–ú–µ—Ç–æ–¥ str.isalpha() –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ä—è–¥–æ–∫ –ª–∏—à–µ –∑ –±—É–∫–≤ (–∞–ª—Ñ–∞–≤—ñ—Ç–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤).
#–Ø–∫—â–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ ‚Äì –ª—ñ—Ç–µ—Ä–∏ (–±–µ–∑ —Ü–∏—Ñ—Ä, –ø—Ä–æ–±—ñ–ª—ñ–≤ –∞–±–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤), –º–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î True, —ñ–Ω–∞–∫—à–µ False.
# üìå –ü—Ä–∏–∫–ª–∞–¥–∏:
# print("Hello".isalpha())   # True (—Ç—ñ–ª—å–∫–∏ –ª—ñ—Ç–µ—Ä–∏)
# print("–ü—Ä–∏–≤—ñ—Ç".isalpha())  # True (—É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏)
# print("Python3".isalpha()) # False (—î —Ü–∏—Ñ—Ä–∞)
# print("Hello!".isalpha())  # False (—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Å–∏–º–≤–æ–ª)
# print(" ".isalpha())       # False (–ø—Ä–æ–±—ñ–ª)
# print("".isalpha())        # False (–ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫)
# üîπ –í–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ:
# –ú–µ—Ç–æ–¥ –ø—Ä–∞—Ü—é—î –∑ –±—É–¥—å-—è–∫–∏–º–∏ –ª—ñ—Ç–µ—Ä–∞–º–∏ –∞–ª—Ñ–∞–≤—ñ—Ç—ñ–≤ (–ª–∞—Ç–∏–Ω–∏—Ü—è, –∫–∏—Ä–∏–ª–∏—Ü—è, –≥—Ä–µ—Ü—å–∫–∏–π –∞–ª—Ñ–∞–≤—ñ—Ç —Ç–æ—â–æ).
# –Ø–∫—â–æ —É —Ä—è–¥–∫—É —Ö–æ—á –æ–¥–∏–Ω –Ω–µ-–∞–ª—Ñ–∞–≤—ñ—Ç–Ω–∏–π —Å–∏–º–≤–æ–ª (—Ü–∏—Ñ—Ä–∞, –ø—Ä–æ–±—ñ–ª, –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—è), isalpha() –ø–æ–≤–µ—Ä–Ω–µ False.
# ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –º—ñ—Å—Ç–∏—Ç—å –ª–∏—à–µ –±—É–∫–≤–∏:
# name = "–Ü–≤–∞–Ω"
# if name.isalpha():
#     print("–Ü–º'—è –∫–æ—Ä–µ–∫—Ç–Ω–µ")
# else:
#     print("–Ü–º'—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –ª–∏—à–µ –±—É–∫–≤–∏")
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–∞–∑–æ–º —ñ–∑ .replace() –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–∫–ª–∞–¥–µ–Ω–∏—Ö —Å–ª—ñ–≤:
# full_name = "Jean-Luc"
# print(full_name.replace("-", "").isalpha())  # True
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–ª–æ–≤–∞ –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏ –∞–±–æ –¥–µ—Ñ—ñ—Å–∞–º–∏, –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —ó—Ö –≤–∞—Ä—Ç–æ –æ—á–∏—Å—Ç–∏—Ç–∏ (replace, strip).

str.endswith()#–ú–µ—Ç–æ–¥ str.endswith(suffix[, start, end]) –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è —Ä—è–¥–æ–∫ –≤–∫–∞–∑–∞–Ω–∏–º —Å—É—Ñ—ñ–∫—Å–æ–º (suffix).
# –Ø–∫—â–æ —Ç–∞–∫ ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î True, —ñ–Ω–∞–∫—à–µ False.
# üìå –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
# ### `.endswith()`
# –ú–µ—Ç–æ–¥ `str.endswith(suffix[, start, end])` –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è —Ä—è–¥–æ–∫ –≤–∫–∞–∑–∞–Ω–∏–º —Å—É—Ñ—ñ–∫—Å–æ–º (`suffix`).
# –Ø–∫—â–æ —Ç–∞–∫ ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î `True`, —ñ–Ω–∞–∫—à–µ `False`.
#  üìå –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
# string.endswith(suffix, start, end)
# - `suffix` ‚Äì —Ä—è–¥–æ–∫ –∞–±–æ –∫–æ—Ä—Ç–µ–∂ —Ä—è–¥–∫—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏.
# - `start` *(–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)* ‚Äì –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
# - `end` *(–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)* ‚Äì –∫—ñ–Ω—Ü–µ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
# ### üìå –ü—Ä–∏–∫–ª–∞–¥–∏:
# print("hello.txt".endswith(".txt"))  # True (—Ä—è–¥–æ–∫ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –Ω–∞ ".txt")
# print("document.pdf".endswith(".txt"))  # False (–∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –Ω–∞ ".pdf")

# # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫—ñ–ª—å–∫–æ—Ö —Å—É—Ñ—ñ–∫—Å—ñ–≤
# print("report.docx".endswith((".pdf", ".docx")))  # True (—î —Å–µ—Ä–µ–¥ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤)

# # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º –æ–±–ª–∞—Å—Ç—ñ –ø–æ—à—É–∫—É
# print("example.py".endswith(".py", 0, 7))  # False (–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç—ñ–ª—å–∫–∏ "example")

# # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ URL
# print("https://example.com".endswith((".com", ".org")))  # True

# ### üîπ –í–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ:
# - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ `start` —Ç–∞ `end` –¥–æ–∑–≤–æ–ª—è—é—Ç—å –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–µ–≤–Ω—É —á–∞—Å—Ç–∏–Ω—É —Ä—è–¥–∫–∞.
# - –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ **–∫–æ—Ä—Ç–µ–∂** —Å—É—Ñ—ñ–∫—Å—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–µ–∫—ñ–ª—å–∫–æ—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤.
# - –ú–µ—Ç–æ–¥ —á—É—Ç–ª–∏–≤–∏–π –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É (`"Hello".endswith("o") ‚Üí True`, `"Hello".endswith("O") ‚Üí False`).
# ### ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
# 1. **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É:**
#    ```python
#    filename = "data.csv"
#    if filename.endswith(".csv"):
#        print("–¶–µ —Ñ–∞–π–ª CSV")
#    ```
# 2. **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–º–µ–Ω—É —Å–∞–π—Ç—É:**
#    ```python
#    url = "https://example.org"
#    if url.endswith((".com", ".org", ".net")):
#        print("–ü–æ–ø—É–ª—è—Ä–Ω–∏–π –¥–æ–º–µ–Ω")
#    ```
# 3. **–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤ —É —Å–ø–∏—Å–∫—É:**
#    ```python
#    files = ["report.pdf", "image.jpg", "script.py", "notes.txt"]
#    pdf_files = [f for f in files if f.endswith(".pdf")]
#    print(pdf_files)  # ['report.pdf']
#    ```
# –ú–µ—Ç–æ–¥ `endswith()` –∑—Ä—É—á–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–∫—ñ–Ω—á–µ–Ω—å —Ä—è–¥–∫—ñ–≤, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —É –Ω–∞–∑–≤–∞—Ö —Ñ–∞–π–ª—ñ–≤ –∞–±–æ URL.

str.startswith()# –ú–µ—Ç–æ–¥ `str.startswith(prefix[, start, end])` –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è —Ä—è–¥–æ–∫ —ñ–∑ –≤–∫–∞–∑–∞–Ω–æ–≥–æ –ø—Ä–µ—Ñ—ñ–∫—Å–∞ (`prefix`).
# # –Ø–∫—â–æ —Ç–∞–∫ ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î `True`, —ñ–Ω–∞–∫—à–µ `False`.
# ### üìå –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
# # string.startswith(prefix, start, end)
# # - `prefix` ‚Äì —Ä—è–¥–æ–∫ –∞–±–æ –∫–æ—Ä—Ç–µ–∂ —Ä—è–¥–∫—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
# # - `start` *(–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)* ‚Äì –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
# # - `end` *(–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)* ‚Äì –∫—ñ–Ω—Ü–µ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
#
# ### üìå –ü—Ä–∏–∫–ª–∞–¥–∏:
# print("hello world".startswith("hello"))  # True (—Ä—è–¥–æ–∫ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "hello")
# print("hello world".startswith("world"))  # False (–Ω–µ –Ω–∞ –ø–æ—á–∞—Ç–∫—É)
#
# # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫—ñ–ª—å–∫–æ—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤
# print("data.csv".startswith(("data", "info")))  # True (–ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "data")
#
# # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º –æ–±–ª–∞—Å—Ç—ñ –ø–æ—à—É–∫—É
# print("example.py".startswith("py", 8))  # True (–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑ 8-–≥–æ —Å–∏–º–≤–æ–ª—É)
# print("example.py".startswith("py", 0, 7))  # False (–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª–∏—à–µ "example")
#
# # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ URL
# print("https://example.com".startswith("https://"))  # True
# print("http://example.com".startswith(("http://", "https://")))  # True
#
# ### üîπ –í–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ:
# # - –ú–µ—Ç–æ–¥ —á—É—Ç–ª–∏–≤–∏–π –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É: `"Hello".startswith("H") ‚Üí True`, `"Hello".startswith("h") ‚Üí False`.
# # - `start` —ñ `end` –¥–æ–∑–≤–æ–ª—è—é—Ç—å –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ç—ñ–ª—å–∫–∏ —á–∞—Å—Ç–∏–Ω—É —Ä—è–¥–∫–∞.
# # - –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ **–∫–æ—Ä—Ç–µ–∂ –ø—Ä–µ—Ñ—ñ–∫—Å—ñ–≤** –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫—ñ–ª—å–∫–æ—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤.
#
# ### ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
# # 1. **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª—É URL:**
# #   url = "https://example.com"
# #    if url.startswith(("http://", "https://")):
# #        print("–¶–µ –≤–µ–±-–∞–¥—Ä–µ—Å–∞")
# # #
# # 2. **–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤ –∑–∞ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º:**
# #    files = ["log_2024.txt", "report.pdf", "log_2023.txt", "data.csv"]
# #    logs = [f for f in files if f.startswith("log_")]
# #    print(logs)  # ['log_2024.txt', 'log_2023.txt']
# #
# # 3. **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É:**
# #    phone = "+380971234567"
# #    if phone.startswith("+380"):
# #        print("–£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –Ω–æ–º–µ—Ä")
# # –ú–µ—Ç–æ–¥ `startswith()` –∫–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—á–∞—Ç–∫—É —Ä—è–¥–∫—ñ–≤, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —É —Ñ–∞–π–ª–∞—Ö, URL-–∞–¥—Ä–µ—Å–∞—Ö –∞–±–æ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö.

str.capitalize()#–ú–µ—Ç–æ–¥ `str.capitalize()` –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î **–ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —Ä—è–¥–∫–∞ —É –≤–µ–ª–∏–∫—É**, –∞ –≤—Å—ñ —ñ–Ω—à—ñ ‚Äì —É **–º–∞–ª—ñ**.
# ### üìå –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
# string.capitalize()
# - –ù–µ –∑–º—ñ–Ω—é—î —Å–∞–º —Ä—è–¥–æ–∫, –∞ –ø–æ–≤–µ—Ä—Ç–∞—î **–Ω–æ–≤–∏–π** —ñ–∑ –∑–º—ñ–Ω–µ–Ω–∏–º —Ä–µ–≥—ñ—Å—Ç—Ä–æ–º.
# ### üìå –ü—Ä–∏–∫–ª–∞–¥–∏:
# print("hello world".capitalize())  # "Hello world"
# print("PYTHON".capitalize())       # "Python" (–ø–µ—Ä—à–∞ –≤–µ–ª–∏–∫–∞, —ñ–Ω—à—ñ –º–∞–ª—ñ)
# print("123abc".capitalize())       # "123abc" (—Ü–∏—Ñ—Ä–∏ –Ω–µ –∑–º—ñ–Ω—é—é—Ç—å—Å—è)
# print("hELLO wORLD".capitalize())  # "Hello world"
# print(" –ø—Ä–∏–≤–µ—Ç –º–∏—Ä ".capitalize()) # " –ø—Ä–∏–≤–µ—Ç –º–∏—Ä " (–ø—Ä–æ–±—ñ–ª–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è)
#
# ### üîπ –í–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ:
# - **–ó–º—ñ–Ω—é—î —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à–∏–π —Å–∏–º–≤–æ–ª**, –∞ —ñ–Ω—à—ñ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä.
# - **–¶–∏—Ñ—Ä–∏ —Ç–∞ —Å–∏–º–≤–æ–ª–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É –Ω–µ –∑–º—ñ–Ω—é—é—Ç—å—Å—è**, —è–∫—â–æ –Ω–µ–º–∞—î –ª—ñ—Ç–µ—Ä.
# - **–ù–µ –∑–º—ñ–Ω—é—î –≤–∏—Ö—ñ–¥–Ω–∏–π —Ä—è–¥–æ–∫**, –∞ –ø–æ–≤–µ—Ä—Ç–∞—î **–Ω–æ–≤–∏–π**.
#
# ### ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
# 1. **–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —ñ–º–µ–Ω:**
#    name = "john doe"
#    formatted_name = name.capitalize()
#    print(formatted_name)  # "John doe"
#
# 2. **–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:**
#    message = "wELCOME TO PYTHON!"
#    print(message.capitalize())  # "Welcome to python!"
#
# 3. **–û—á–∏—â–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø–µ—Ä–µ–¥ –≤–∏–≤–æ–¥–æ–º:**
#    text = input("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç: ").strip().capitalize()
#    print(text)
# –ú–µ—Ç–æ–¥ `capitalize()` –∫–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—ñ–≤, –Ω–∞–∑–≤ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å. üöÄ

str.upper() #–ú–µ—Ç–æ–¥ `str.upper()` –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î **–≤—Å—ñ –ª—ñ—Ç–µ—Ä–∏** —Ä—è–¥–∫–∞ —É **–≤–µ–ª–∏–∫—ñ**.
# - –ù–µ –∑–º—ñ–Ω—é—î –≤–∏—Ö—ñ–¥–Ω–∏–π —Ä—è–¥–æ–∫, –∞ –ø–æ–≤–µ—Ä—Ç–∞—î **–Ω–æ–≤–∏–π** –∑—ñ –∑–º—ñ–Ω–µ–Ω–∏–º —Ä–µ–≥—ñ—Å—Ç—Ä–æ–º.
# ### üìå –ü—Ä–∏–∫–ª–∞–¥–∏:
# print("hello".upper())      # "HELLO"
# print("Hello World".upper())# "HELLO WORLD"
# print("python3".upper())    # "PYTHON3" (—Ü–∏—Ñ—Ä–∏ –Ω–µ –∑–º—ñ–Ω—é—é—Ç—å—Å—è)
# print("123abc".upper())     # "123ABC"
# print("–ü—Ä–∏–≤—ñ—Ç!".upper())    # "–ü–†–ò–í–Ü–¢!"
#
# ### üîπ –í–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ:
# - **–¢—ñ–ª—å–∫–∏ –ª—ñ—Ç–µ—Ä–∏** –∑–º—ñ–Ω—é—é—Ç—å —Ä–µ–≥—ñ—Å—Ç—Ä, **—Ü–∏—Ñ—Ä–∏ —Ç–∞ —Å–∏–º–≤–æ–ª–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è** –Ω–µ–∑–º—ñ–Ω–Ω–∏–º–∏.
# - **–ù–µ –∑–º—ñ–Ω—é—î –≤–∏—Ö—ñ–¥–Ω–∏–π —Ä—è–¥–æ–∫**, –∞ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π.
#
# ### ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
# 1. **–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É —É –≤–µ—Ä—Ö–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä (–∑–∞–≥–æ–ª–æ–≤–∫–∏, –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è):**
#    title = "breaking news: python 3.12 released!"
#    print(title.upper())  # "BREAKING NEWS: PYTHON 3.12 RELEASED!"
#
# 2. **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–æ–¥—ñ–≤):**
#    code = input("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥: ").upper()
#    if code == "DISCOUNT2025":
#        print("–ö–æ–¥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!")
#
# 3. **–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç—É —É –í–ï–õ–ò–ö–Ü –õ–Ü–¢–ï–†–ò:**
#    user_input = input("–ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä: ")
#    print(user_input.upper())  # –í–∏–≤–µ–¥–µ —É –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ
#
# –ú–µ—Ç–æ–¥ `upper()` –∫–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É —É –≤–µ—Ä—Ö–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä, –æ–±—Ä–æ–±–∫–∏ –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤. üöÄ

str.index()# ndex() ‚Äî —Ü–µ –º–µ—Ç–æ–¥ —Ä—è–¥–∫–∞ –≤ Python, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä—à–æ–≥–æ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è –ø—ñ–¥—Ä—è–¥–∫–∞. –Ø–∫—â–æ –ø—ñ–¥—Ä—è–¥–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ,
# –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø–æ–º–∏–ª–∫–∞ ValueError.
# üìå –°–∏–Ω—Ç–∞–∫—Å–∏—Å
# string.index(sub, start=0, end=len(string))
# –ê—Ä–≥—É–º–µ–Ω—Ç–∏:
# sub ‚Äî –ø—ñ–¥—Ä—è–¥–æ–∫, —è–∫–∏–π —à—É–∫–∞—î–º–æ.
# start (–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ) ‚Äî –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –ø–æ—à—É–∫—É.
# end (–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ) ‚Äî –∫—ñ–Ω—Ü–µ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –ø–æ—à—É–∫—É.
# –ü–æ–≤–µ—Ä—Ç–∞—î:
# üìç –ü–æ–∑–∏—Ü—ñ—é (—ñ–Ω–¥–µ–∫—Å) –ø–µ—Ä—à–æ–≥–æ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è –ø—ñ–¥—Ä—è–¥–∫–∞ –≤ —Ä—è–¥–∫—É.
# ‚ùå –Ø–∫—â–æ –ø—ñ–¥—Ä—è–¥–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî ValueError.
# üîπ –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
# ‚úÖ 1. –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è
# text = "Hello, world!"
# print(text.index("o"))  # 4üîπ –ü–æ—è—Å–Ω–µ–Ω–Ω—è:–ü–µ—Ä—à–∞ –ª—ñ—Ç–µ—Ä–∞ "o" –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —ñ–Ω–¥–µ–∫—Å—ñ 4.
# ‚úÖ 2. –ü–æ—à—É–∫ —É –ø—ñ–¥—Ä—è–¥–∫—É (start, end)
# text = "Hello, world!"
# print(text.index("o", 5))  # 8üîπ –ü–æ—è—Å–Ω–µ–Ω–Ω—è:–®—É–∫–∞—î–º–æ "o" –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ —ñ–Ω–¥–µ–∫—Å—É 5 ‚Üí –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó 8.
# ‚úÖ 3. –Ø–∫—â–æ –ø—ñ–¥—Ä—è–¥–∫–∞ –Ω–µ–º–∞—î ‚Üí ValueError
# text = "Hello, world!"
# print(text.index("z"))  # ‚ùå ValueError: substring not foundüîπ "z" –Ω–µ–º–∞—î –≤ —Ä—è–¥–∫—É ‚Üí –æ—Ç—Ä–∏–º–∞—î–º–æ –ø–æ–º–∏–ª–∫—É.
# ‚úÖ 4. –ü–æ—à—É–∫ —Å–ª–æ–≤–∞
# text = "Python is amazing"
# print(text.index("amazing"))  # 10üîπ "amazing" –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ —ñ–Ω–¥–µ–∫—Å—É 10.
# ‚úÖ 5. –û–±—Ö—ñ–¥ –ø–æ–º–∏–ª–∫–∏ —á–µ—Ä–µ–∑ try-except
# text = "Hello, world!"
# try:
#     index = text.index("z")
#     print("Found at:", index)
# except ValueError:
#     print("Not found!")
# üìå –†–µ–∑—É–ª—å—Ç–∞—Ç:
# mathematica
# Not found!
# üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ try-except, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ ValueError.
# üîπ –ß–∏–º index() –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ find()?
# –ú–µ—Ç–æ–¥	–Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ	–Ø–∫—â–æ –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ
# index()	–ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å	–í–∏–∫–ª–∏–∫–∞—î ValueError
# find()	–ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å	–ü–æ–≤–µ—Ä—Ç–∞—î -1
# text = "Hello, world!"
# print(text.index("o"))  # 4
# print(text.find("o"))   # 4
# print(text.find("z"))   # -1
# üîπ find() –±–µ–∑–ø–µ—á–Ω—ñ—à–∏–π, –±–æ –Ω–µ –≤–∏–∫–ª–∏–∫–∞—î –ø–æ–º–∏–ª–∫—É.
# üî• –í–∏—Å–Ω–æ–≤–æ–∫
# ‚úÖ index() ‚Äî –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –ø–µ—Ä—à–µ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è –ø—ñ–¥—Ä—è–¥–∫–∞
# ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î start —ñ end –¥–ª—è –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–æ—à—É–∫—É
# ‚úÖ –í–∏–∫–ª–∏–∫–∞—î ValueError, —è–∫—â–æ –ø—ñ–¥—Ä—è–¥–∫–∞ –Ω–µ–º–∞—î
# ‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: find(), —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î -1, –∞ –Ω–µ –ø–æ–º–∏–ª–∫—É

str.partition() # —Ä–æ–∑–±–∏–≤–∞—î —Å—Ç—Ä—ñ—á–∫—É –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏–Ω–∏ —Ü–µ –º–µ—Ç–æ–¥ —Ä—è–¥–∫–∞, —è–∫–∏–π —Ä–æ–∑–¥—ñ–ª—è—î —Ä—è–¥–æ–∫ –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏–Ω–∏:1Ô∏è‚É£ –¢–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–æ–º2Ô∏è‚É£ –°–∞–º —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫
# 3Ô∏è‚É£ –¢–µ–∫—Å—Ç –ø—ñ—Å–ª—è —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–∞.–Ø–∫—â–æ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –∫–æ—Ä—Ç–µ–∂, –¥–µ –≤–µ—Å—å —Ä—è–¥–æ–∫ –±—É–¥–µ —É –ø–µ—Ä—à–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—ñ, –∞ –¥–≤–∞ —ñ–Ω—à–∏—Ö –±—É–¥—É—Ç—å –ø–æ—Ä–æ–∂–Ω—ñ–º–∏ ("").
# üìå –°–∏–Ω—Ç–∞–∫—Å–∏—Å/string.partition(separator)
# –ê—Ä–≥—É–º–µ–Ω—Ç–∏:separator ‚Äî –ø—ñ–¥—Ä—è–¥–æ–∫, –∑–∞ —è–∫–∏–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ —Ä—è–¥–æ–∫.
# –ü–æ–≤–µ—Ä—Ç–∞—î:üìç –ö–æ—Ä—Ç–µ–∂ —ñ–∑ —Ç—Ä—å–æ—Ö —á–∞—Å—Ç–∏–Ω ‚Üí (–¥–æ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–∞, —Å–∞–º —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫, –ø—ñ—Å–ª—è —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–∞)
# üîπ –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
# ‚úÖ 1. –†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –∑–∞ –ø–µ—Ä—à–∏–º –≤—Ö–æ–¥–∂–µ–Ω–Ω—è–º —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–∞
# text = "Hello, world!"
# print(text.partition(", "))  # ('Hello', ', ', 'world!')üîπ "Hello" ‚Äî —á–∞—Å—Ç–∏–Ω–∞ –ø–µ—Ä–µ–¥ –∫–æ–º–æ—éüîπ ", " ‚Äî —Å–∞–º —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫üîπ "world!" ‚Äî —á–∞—Å—Ç–∏–Ω–∞ –ø—ñ—Å–ª—è –∫–æ–º–∏
# ‚úÖ 2. –Ø–∫—â–æ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π
# text = "Hello world"
# print(text.partition(","))  # ('Hello world', '', '')üîπ –û—Å–∫—ñ–ª—å–∫–∏ "," –Ω–µ–º–∞—î –≤ —Ä—è–¥–∫—É:–ü–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç ‚Äî –≤–µ—Å—å —Ä—è–¥–æ–∫–î—Ä—É–≥–∏–π —ñ —Ç—Ä–µ—Ç—ñ–π ‚Äî –ø–æ—Ä–æ–∂–Ω—ñ ("").
# ‚úÖ 3. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –∑–º—ñ–Ω–Ω–∏—Ö
# text = "apple-orange-banana"
# before, sep, after = text.partition("-")
# print(before)  # apple
# print(sep)     # -
# print(after)   # orange-banana
# üîπ –†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏–Ω–∏:
# 1Ô∏è‚É£ "apple" ‚Üí –ø–µ—Ä–µ–¥ "-"
# 2Ô∏è‚É£ "-" ‚Üí —Å–∞–º —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫
# 3Ô∏è‚É£ "orange-banana" ‚Üí –ø—ñ—Å–ª—è "-"
#
# ‚úÖ 4. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —É–º–æ–≤–∞—Ö
# text = "user@example.com"
# name, at, domain = text.partition("@")
# if at:
#     print(f"Username: {name}, Domain: {domain}")
# else:
#     print("No email found.")
# üìå –Ø–∫—â–æ @ —î, —Ä–æ–∑–¥—ñ–ª—è—î–º–æ –Ω–∞ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –¥–æ–º–µ–Ω.
#
# ‚úÖ 5. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —É while –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Ä—è–¥–∫–∞
# text = "one,two,three"
# while text:
#     part, sep, text = text.partition(",")
#     print(part)#one two three
# üîπ –ú–µ—Ç–æ–¥ partition() –∑—Ä—É—á–Ω–∏–π –¥–ª—è –ø–æ–∫—Ä–æ–∫–æ–≤–æ–≥–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è —Ä—è–¥–∫–∞.
# üîπ –ß–∏–º partition() –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ split()?
# –ú–µ—Ç–æ–¥	–©–æ —Ä–æ–±–∏—Ç—å	–ö—ñ–ª—å–∫—ñ—Å—Ç—å —á–∞—Å—Ç–∏–Ω
# partition()	–†–æ–∑–±–∏–≤–∞—î –Ω–∞ 3 —á–∞—Å—Ç–∏–Ω–∏	–ó–∞–≤–∂–¥–∏ 3
# split()	–†–æ–∑–±–∏–≤–∞—î –Ω–∞ –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ —á–∞—Å—Ç–∏–Ω–∏	–ù–µ–æ–±–º–µ–∂–µ–Ω–æ
# text = "apple-orange-banana"
# print(text.partition("-"))
# # ('apple', '-', 'orange-banana')
# print(text.split("-"))
# # ['apple', 'orange', 'banana']
# üìå split() —Ä–æ–∑–±–∏–≤–∞—î –≤—Å—ñ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è, –∞ partition() ‚Äî —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à–µ.
#
# üî• –í–∏—Å–Ω–æ–≤–æ–∫
# ‚úÖ partition() —Ä–æ–∑–±–∏–≤–∞—î —Ä—è–¥–æ–∫ –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏–Ω–∏
# ‚úÖ –Ø–∫—â–æ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î (—Ä—è–¥–æ–∫, '', '')
# ‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ split(), –∞–ª–µ partition() –∑–∞–≤–∂–¥–∏ –¥–∞—î 3 –∑–Ω–∞—á–µ–Ω–Ω—è
# üîπ –ö–æ–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏?
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞–π—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à–µ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–∞
# –ö–æ–ª–∏ –≤–∞–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ 3 —á–∞—Å—Ç–∏–Ω–∏ (–Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π)

str.min()#min(iterable, *args, key=None) –ü–æ–≤–µ—Ä—Ç–∞—î –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —É –∫–æ–ª–µ–∫—Ü—ñ—ó –∞–±–æ —Å–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞–Ω–∏—Ö —á–∏—Å–µ–ª.
# numbers = [3, 7, 2, 9, 5]
# print(min(numbers))  # 2
# print(min(10, 5, 8))  # 5
# words = ["apple", "banana", "kiwi"]
# print(min(words, key=len))  # 'kiwi' (–Ω–∞–π–∫–æ—Ä–æ—Ç—à–µ —Å–ª–æ–≤–æ)

str.max()# max(iterable, *args, key=None) –ü–æ–≤–µ—Ä—Ç–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —É –∫–æ–ª–µ–∫—Ü—ñ—ó –∞–±–æ —Å–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞–Ω–∏—Ö —á–∏—Å–µ–ª.
# print(max(numbers))  # 9
# print(max(10, 5, 8))  # 10
# print(max(words, key=len))  # 'banana' (–Ω–∞–π–¥–æ–≤—à–µ —Å–ª–æ–≤–æ)

str.sum()# sum(iterable, start=0)–ü–æ–≤–µ—Ä—Ç–∞—î —Å—É–º—É –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ (–ø–æ—á–∏–Ω–∞—é—á–∏ –∑—ñ start).
# print(sum(numbers))  # 26
# print(sum(numbers, 10))  # 36 (–¥–æ —Å—É–º–∏ –¥–æ–¥–∞—î—Ç—å—Å—è 10)

str.sorted() # sorted(iterable, key=None, reverse=False) –ü–æ–≤–µ—Ä—Ç–∞—î –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫ (–∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –∞–±–æ —Å–ø–∞–¥–∞–Ω–Ω—è–º).
# print(sorted(numbers))  # [2, 3, 5, 7, 9]
# print(sorted(numbers, reverse=True))  # [9, 7, 5, 3, 2]
# print(sorted(words, key=len))  # ['kiwi', 'apple', 'banana'] (–∑–∞ –¥–æ–≤–∂–∏–Ω–æ—é)

pow() #pow(base, exp, mod=None) –û–±—á–∏—Å–ª—é—î base ** exp (–ø—ñ–¥–Ω–µ—Å–µ–Ω–Ω—è –¥–æ —Å—Ç–µ–ø–µ–Ω—è). –Ø–∫—â–æ –ø–µ—Ä–µ–¥–∞–Ω–æ mod, –ø–æ–≤–µ—Ä—Ç–∞—î (base ** exp) % mod.
# print(pow(2, 3))  # 8 (2¬≥)
# print(pow(5, 3, 7))  # 6 (5¬≥ % 7)
# üî• –í–∏—Å–Ω–æ–≤–æ–∫
# –§—É–Ω–∫—Ü—ñ—è	      –û–ø–∏—Å	                 –ü—Ä–∏–∫–ª–∞–¥
# min()	   –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è	    min(3, 7, 2) ‚Üí 2
# max()	   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è	    max(3, 7, 2) ‚Üí 7
# sum()	   –°—É–º–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤	        sum([3, 7, 2]) ‚Üí 12
# sorted()   –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è	            sorted([3, 7, 2]) ‚Üí [2, 3, 7]
# pow()	   –°—Ç–µ–ø—ñ–Ω—å	                pow(2, 3) ‚Üí 8

len() # –º–µ—Ç–æ–¥ –¥–æ–≤–∂–∏–Ω–∏ –≤ –Ω—å–æ–º—É –ø–µ—Ä–µ–¥–∞—î–º–æ —Å–ª–æ–≤–Ω–∏–∫ –∞–±–æ —Å–µ—Ç,—Å—Ç—Ä.–∫–æ—Ä—Ç–µ–∂

print('*'*25) #–º–æ–∂–Ω–∞ —É–º–Ω–æ–∂–∞—Ç–∏

# name = "Max"
# age = 18
# weight = 70.5
# string = f'Hello, my name is {name} and my age is {age} and my weight is {weight}'
# print(string) # —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è