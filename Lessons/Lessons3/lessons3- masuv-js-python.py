# üîπ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–∞—Å–∏–≤ —è–∫ –≤ Js –Ω–∞ python 1:05

class Array:
    def __init__(self, *args):
        self.__arr = [*args]

    def __str__(self):
        return str(self.__arr)
    def __len__(self):
        return len(self.__arr)
    def __setitem__(self, key, value): # index= key
        self.__arr[key] = value
    def __getitem__(self, key):
        return self.__arr[key]
    def __delitem__(self, key):
        del self.__arr[key]
    def push(self, item):
        self.__arr.append(item)
    # def pop(self):
    #     return self.__array.pop()
    def map(self, cb):# –¥–∞—î –∑–∞–≤–∂–¥–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –Ω–∞ –≤–∏—Ö–æ–¥—ñ
        return Array(*[cb(item) for item in self.__arr])#  —Å—Ç–≤.–Ω–æ–≤–∏–π –µ–∫–∑.–∫–ª. –∞ —Ç—É—Ç –∑ for item –ø–µ—Ä–µ–±–µ—Ä–µ–º–æ –≤–µ—Å—å –Ω–∞—à –º–∞—Å–∏–≤ —ñ
         # –±—É–¥–µ–º–æ –∑–∞–ø—É—Å–∫–∞—Ç–∏ —Ü—é —Ñ-—é cb() —ñ –∫–ª–∞–¥–µ–º–æ —Ç—É–¥–∏ item,cb(item) —ñ –æ—Ç—Ä–∏–º–∞—î–º–æ –º–∞—Å–∏–≤ —è–∫–∏–π –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑–∫–ª–∞—Å—Ç–∏ –≤ –µ–∫–∑.–∫–ª. *[], —â–æ–± —É –Ω–∞—Å –∑–Ω–æ–≤—É –∑'—è–≤–∏–≤—Å—è –Ω—Ä–≤–∏–π —î–∫–∑
    def filter(self, cb):
        return Array(*[item for item in self.__arr if cb(item)]) # —Ä–æ–∑–ø–∞–∫–æ–≤—É—î–º–æ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —ñ—Ç–µ—Ä—É—î–º–æ –π–æ–≥–æ –ø–æ —É–º–æ–≤—ñ cb() —ñ –ø–µ—Ä–µ–¥–∞—î–º–æ cb(item),—à—ñ –≤ —Ç–∞–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É –∑–∞–ø–∏—Å—É—î–º–æ –π–æ–≥–æ

#üîπ –±—ñ–ª—å—à-–º–µ–Ω—à —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é –Ω–∞–ø–∏—Å–∞–ª–∏= —Ç–µ–ø–µ—Ä —è–∫ –∑ —Ü–∏–º –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
'''arr=Array()
arr.push(1)
arr.push(10)# [1,10]
print(arr)
print(arr[0])# –ø–æ —ñ–Ω–¥–µ–∫—Å—É —ñ–∑ –º–µ—Ç–æ–¥—É __getitem__ / #1
arr[0]=55 # –∑–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ —ñ–Ω–¥–µ–∫—Å–∞ 0 —ñ –∑–∞–ø–∏—Å—É—î–º–æ –π–æ–≥–æ=55 \ —Ü–µ –¥–∞—î –Ω–∞ –∑–º–æ–≥—É –º–µ—Ç–æ–¥ __setitem__
del arr[0] # [10] 
print(arr)'''
arr=Array(3,4,5,6,7,8,9)
arr_map=arr.map(lambda x: x * 2)#–ø–µ—Ä–µ–¥–∞—î–º–æ –∫–æ–ª–±–µ–∫ —Ü–µ—É –≤–∏–ø–∞–¥–∫—É –Ω–∞—à–æ–≥–æ –ª—è–º–¥–∞ —Ñ-—è
print(arr_map) # [6, 8, 10, 12, 14, 16, 18]
arr_filter =arr.filter(lambda x: x < 5)
print(arr_filter) # [3, 4]

# –æ—Å—å —Ç–∞–∫—ñ —Ä–µ—á—ñ –º–æ–∂–Ω–∞ —Ä–æ–±–∏—Ç–∏ –∑–∞–≤–¥—è–∫–∏ –ø–µ—Ä–µ–≥—Ä—É–∑–æ–∫

''' ‚úÖ Python: __setitem__, __getitem__
–¶–µ –º–∞–≥—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏, —è–∫—ñ –¥–æ–∑–≤–æ–ª—è—é—Ç—å —Ç–≤–æ—î–º—É –∫–ª–∞—Å—É –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —è–∫ —Å–ª–æ–≤–Ω–∏–∫ –∞–±–æ —Å–ø–∏—Å–æ–∫ ‚Äî —á–µ—Ä–µ–∑ [].
üîπ __getitem__(self, key) ‚Äî –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∫–ª—é—á–µ–º

üîπ__setitem__(self, key, value) ‚Äî —Ü–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è, –∫–æ–ª–∏ —Ç–∏ –ø—Ä–∏—Å–≤–æ—é—î—à –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –ø–æ –∫–ª—é—á—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏—Ö –¥—É–∂–æ–∫:
 –î–ª—è —á–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è?
–©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–≤–æ—ó —Å–ª–æ–≤–Ω–∏–∫–∏ –∞–±–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏, —è–∫—ñ –ø–æ–≤–æ–¥—è—Ç—å—Å—è —è–∫ —Å–ø–∏—Å–∫–∏ –∞–±–æ –º–∞–ø–∏.
–©–æ–± –∫–æ–Ω—Ç—Ä–æ–ª—é–≤–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: –≤–∞–ª—ñ–¥–∞—Ü—ñ—é, –ª–æ–≥—É–≤–∞–Ω–Ω—è, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è.

üîπ push (JS, —ñ–Ω–æ–¥—ñ –≤ Python —Å–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ .append)=–î–æ–¥–∞—î –µ–ª–µ–º–µ–Ω—Ç —É –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É

üîπ pop=–í–∏–¥–∞–ª—è—î –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç

üîπmap=–ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –∑–∞ —Ñ—É–Ω–∫—Ü—ñ—î—é
arr = [1, 2, 3]
doubled = list(map(lambda x: x * 2, arr))  # [2, 4, 6]

üîπfilter=–ü–æ–≤–µ—Ä—Ç–∞—î —Ç—ñ–ª—å–∫–∏ —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—é—Ç—å —É–º–æ–≤—É
arr = [1, 2, 3, 4]
even = list(filter(lambda x: x % 2 == 0, arr))  # [2, 4]

 '''