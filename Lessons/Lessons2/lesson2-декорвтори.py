# декоратори використовуються в деяких списках не кругом
# def greeting():
#     print('Hello')
#
# greeting()
# хочу запускати ф-ю, щоб з верху чи с низу були зірки, і тут використовуємо декоратори


# def decor(func):  # ств.ф-ю яка приймає ф-ю вказую ф-ю
#     def inner():  # в ній буде ще одна функція
#         print('***************************') #
#         func()  # вказую ф-ю яка вказана в decor(func) запускаю
#         print('***************************')
#     return inner # повертаю саму фунцію, не потрібно її запускати
# def greeting():
#     print('Hello') #
#
# #decor(greeting) #викликаю decor і вкладаю greeting
# greeting_decor = decor(greeting) #в результаті виконання decor це повернення ф-ї inner і все це повертає ф-ю
# greeting_decor() # запускаю ф-ю

# ТЕПЕР ВКЛАДАЄМО ІМ'Я {name}
def decor(func):  # ств.ф-ю яка приймає ф-ю вказую ф-ю
    def inner(*args, **kwargs):  # в ній буде ще одна функція де *args=приймає любий аргумент, **kwargs=приймає іменований аргумент
        print('***************************') #
        func(*args, **kwargs)  # вказую ф-ю яка вказана в decor(func) запускаю,*args, **kwargs=тут їх розпаковуємо
        print('***************************')
    return inner # повертаю саму фунцію, не потрібно її запускати

#№№№№№№№№робимо другий декоратор

def decor2(func):
    def inner(*args, **kwargs):
        print('+++++++++++++++++++++++++++')
        func(*args, **kwargs)
        print('++++++++++++++++++++++++++++')
    return inner

# @decor їх може буди декілька і різних або та сама
@decor #буде двойний ряд зірок
@decor2 # @ ставимо собачку і вона рухається
def greeting(name):
    print(f'Hello, {name}') #

# #decor(greeting) #викликаю decor і вкладаю greeting
# greeting_decor = decor(greeting) #в результаті виконання decor це повернення ф-ї inner і все це повертає ф-ю
# greeting_decor('Max') # запускаю ф-ю і передаю {name}=ЩОБ, ЦЕ НЕ РОбИТИ МИ МОЖЕМО НАВІШАТИ ЇЇ НАД БУДЬ-ЯКОЮ Ф-Ю @decor,І РОБИТИ СКІЛЬКИ
# ХОЧЕМО і ЗАПУСКАЄМО ЇЇ використовувати різну логіку
greeting('Nata')